plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    def versionPropsFile = file('version.properties')
    def versionBuild

    /*Setting default value for versionBuild which is the last incremented value stored in the file */
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }


    /*Wrapping inside a method avoids auto incrementing on every gradle task run. Now it runs only when we build apk*/
    ext.autoIncrementBuildNumber = {

        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version file")
        }
    }

    defaultConfig {
        applicationId "com.aaxena.bhojan"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "Beta V:"+ versionBuild

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    // Hook to check if the release/debug task is among the tasks to be executed.
    //Let's make use of it
    gradle.taskGraph.whenReady {taskGraph ->
        if (taskGraph.hasTask(assembleDebug)) {  /* when run debug task */
            autoIncrementBuildNumber()
        } else if (taskGraph.hasTask(assembleRelease)) { /* when run release task */
            autoIncrementBuildNumber()
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Lottie Animations
    implementation "com.airbnb.android:lottie:3.4.0"

    //Firebase Google Login
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.google.firebase:firebase-auth:20.0.4'

    // Circular Image View
    implementation 'com.mikhaellopez:circularimageview:4.2.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    //Firebase Storage
    implementation 'com.google.firebase:firebase-storage:19.2.2'

    //Firebase Realtime Database
    implementation 'com.google.firebase:firebase-database:19.7.0'

    //Google Location
    implementation 'com.google.android.gms:play-services-location:18.0.0'

    //Double Click Listener
    implementation 'com.github.pedromassango:doubleClick:3.0'

    //Bottom Animated NavBar
    implementation 'nl.joery.animatedbottombar:library:1.0.9'

    //Fading Text View
    implementation 'com.tomer:fadingtextview:2.6'

    //Percent Layout
    implementation 'androidx.percentlayout:percentlayout:1.0.0'

}